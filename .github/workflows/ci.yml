name: CI
on:
  workflow_dispatch:
  push:
    paths:
      - "**.go"
      - "go.sum"
      - "go.mod"
      - "Dockerfile"
  pull_request:
    paths:
      - "**.go"
      - "go.sum"
      - "go.mod"
      - "Dockerfile"

permissions:
  contents: read
  pull-requests: read

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build . --file Dockerfile
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout 2m0s
  unit-tests:
    needs: golangci-lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.golang }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.golang }}-
      - name: Run tests on Windows
        if: matrix.os == 'windows-latest'
        run: go test -timeout 30s
        continue-on-error: true
      - name: Run tests on Unix-like
        if: matrix.os != 'windows-latest'
        run: go test -timeout 30s
  integration-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.golang }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.golang }}-
      - name: Run integ test with Docker compose
        run: cd ./examples/integration && make
